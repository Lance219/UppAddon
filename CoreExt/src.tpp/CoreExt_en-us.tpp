topic "";
[i448;a25;kKO9;2 $$1,0#37138531426314131252341829483380:class]
[l288;2 $$2,2#27521748481378242620020725143825:desc]
[0 $$3,0#96390100711032703541132217272105:end]
[H6;0 $$4,0#05600065144404261032431302351956:begin]
[i448;a25;kKO9;2 $$5,0#37138531426314131252341829483370:item]
[l288;a4;*@5;1 $$6,6#70004532496200323422659154056402:requirement]
[l288;i1121;b17;O9;~~~.1408;2 $$7,0#10431211400427159095818037425705:param]
[i448;b42;O9;2 $$8,8#61672508125594000341940100500538:tparam]
[b42;2 $$9,9#13035079074754324216151401829390:normal]
[2 $$0,0#00000000000000000000000000000000:Default]
[{_} 
[s4; &]
[s5;:lz`:`:memcpy`_record`(void`*`,const void`*`,size`_t`): [@(0.0.255) template] 
<[@(0.0.255) unsigned] [@(0.0.255) int] size> [@(0.0.255) inline] [@(0.0.255) void] 
[* memcpy`_record]([@(0.0.255) void] [@(0.0.255) `*][*@3 dest], [@(0.0.255) const] 
[@(0.0.255) void] [@(0.0.255) `*][*@3 src], size`_t [*@3 count])&]
[s0; -|copy [*@3 count ]record each of size [*@3 size] from [*@3 src ]to 
[*@3 dest]&]
[s2;%% .&]
[s2; [*@3 dest ]should points to free raw memory of at lease size [*@3 size`*count]&]
[s3; &]
[s0;%% &]
[s4; &]
[s5;:lz`:`:Off: [* tribool]&]
[s2;%%  A truely nullable boolean type.&]
[s3; &]
[s1;:lz`:`:StrLiteral: [*3 StrLiteral]&]
[s2;%% StrLiteral is used to separate a const char `* from a compile 
time ASCIIZ constant. However, any ASCIIZ that`'s guaranteed 
to outlive certain purpose can be treated as StrLiteral to potentially 
improve performance or reduce memory foot print.&]
[s3; &]
[s0;:lz`:`:operator`"`"`_z`(const char`*`,size`_t`):%% [* operator]`"`"`_z&]
[s0;%% -|By attached a `_z to a ASCIIZ string, we can tell the compiler 
to treat it as a [* StrLiteral.]&]
[s0;%% [* -|]eg.&]
[s0;%% -|-|DoSomeThingWith(`"A literal String`");&]
[s0;%% -|may be treated differently from&]
[s0;%% -|-|DoSomeThingWith(`"A literal String`"`_z);]]